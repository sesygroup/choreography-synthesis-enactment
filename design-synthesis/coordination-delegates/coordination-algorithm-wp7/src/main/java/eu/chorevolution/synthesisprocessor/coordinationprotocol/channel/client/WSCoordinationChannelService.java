 /*
 * Copyright 2015 The CHOReVOLUTION project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.chorevolution.synthesisprocessor.coordinationprotocol.channel.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WSCoordinationChannelService", targetNamespace = "http://eu.chorevolution.synthesisprocessor.coordinationprotocol.channel.client/", wsdlLocation = "file:/home/claudio/repositoryCoordinationAlgorithm/coordination-algorithm/etc/wsdl/WSCoordinationChannel.wsdl")
public class WSCoordinationChannelService
    extends Service
{

    private final static URL WSCOORDINATIONCHANNELSERVICE_WSDL_LOCATION;
    private final static WebServiceException WSCOORDINATIONCHANNELSERVICE_EXCEPTION;
    private final static QName WSCOORDINATIONCHANNELSERVICE_QNAME = new QName("http://eu.chorevolution.synthesisprocessor.coordinationprotocol.channel.client/", "WSCoordinationChannelService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/claudio/repositoryCoordinationAlgorithm/coordination-algorithm/etc/wsdl/WSCoordinationChannel.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSCOORDINATIONCHANNELSERVICE_WSDL_LOCATION = url;
        WSCOORDINATIONCHANNELSERVICE_EXCEPTION = e;
    }

    public WSCoordinationChannelService() {
        super(__getWsdlLocation(), WSCOORDINATIONCHANNELSERVICE_QNAME);
    }

    public WSCoordinationChannelService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSCOORDINATIONCHANNELSERVICE_QNAME, features);
    }

    public WSCoordinationChannelService(URL wsdlLocation) {
        super(wsdlLocation, WSCOORDINATIONCHANNELSERVICE_QNAME);
    }

    public WSCoordinationChannelService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSCOORDINATIONCHANNELSERVICE_QNAME, features);
    }

    public WSCoordinationChannelService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSCoordinationChannelService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSCoordinationChannel
     */
    @WebEndpoint(name = "WSCoordinationChannelPort")
    public WSCoordinationChannel getWSCoordinationChannelPort() {
        return super.getPort(new QName("http://eu.chorevolution.synthesisprocessor.coordinationprotocol.channel.client/", "WSCoordinationChannelPort"), WSCoordinationChannel.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSCoordinationChannel
     */
    @WebEndpoint(name = "WSCoordinationChannelPort")
    public WSCoordinationChannel getWSCoordinationChannelPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://eu.chorevolution.synthesisprocessor.coordinationprotocol.channel.client/", "WSCoordinationChannelPort"), WSCoordinationChannel.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSCOORDINATIONCHANNELSERVICE_EXCEPTION!= null) {
            throw WSCOORDINATIONCHANNELSERVICE_EXCEPTION;
        }
        return WSCOORDINATIONCHANNELSERVICE_WSDL_LOCATION;
    }

}
